torch.stack()
stack堆叠的意思，函数用于合并tensor块
用法：stack( (a,b,...), dim)
    一般默认dim=0，表示纵轴方向，y轴方向，竖轴方向
骚气用法： stack(  [a for i in range(number)] )
    表示将tensor a 复制了number遍，然后合并在一起
也可以将多个tensor合并，stack([m for i,m in enumerate(A)] )
    表示A中含有多个tensor，沿纵轴合并
    
torch.min()
选择最小值
用法：min( (a), 0)
    返回tensor中最小值，以及索引
    
torch.squeeze()
对数据维度进行解压
用法： a.squeeze()
    返回去掉为1的维度的a
    
torch.add(a,b):求和
torch.div(a,b):求商    a为tensor的话，返回tensor中每个元素分别除以
torch.mul(a,b):求积（不一定是矩阵）
torch.pow(a,b):求幂   a为tensor的话，返回tensor中每个元素分别平方
torch.mm(a,b)：求积（按矩阵和矩阵之间的规则做）
torch.mv(a,b):求积（按矩阵和向量之间的规则做）

torch.sum(input, dim, out=None) → Tensor
input (Tensor) – 输入张量
dim (int) – 缩减的维度
out (Tensor, optional) – 结果张量
print(x.sum(0)) #按列求和
print(x.sum(1)) #按行求和
print(torch.sum(x))   #按列求和
print(torch.sum(x, 0))#按列求和
print(torch.sum(x, 1))#按行求和

torch.neg(input, out=None):
返回一个新张量，包含输入input张量按元素取负
  
torch.repeat()
沿着指定的维度重复tensor。不同与expand()，本函数复制的是tensor中的数据。
x = torch.Tensor([1,2,3])
x.repeat(4,2)
1 2 3 1 2 3
1 2 3 1 2 3
1 2 3 1 2 3
1 2 3 1 2 3
x.repeat(4)
1 2 3 1 2 3 1 2 3 1 2 3
一个参数默认横向重复几次
